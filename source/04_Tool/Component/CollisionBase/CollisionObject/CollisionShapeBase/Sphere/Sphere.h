//================================================================================
//
//    球クラス
//    Author : Araki Kai                                作成日 : 2017/11/28
//
//================================================================================

#ifndef	_SPHERE_H_
#define _SPHERE_H_



//======================================================================
//
// インクルード文
//
//======================================================================

#include "../CollisionShapeBase.h"

#include <Vector3D.h>



//======================================================================
//
// クラス定義
//
//======================================================================

class Sphere : public CollisionShapeBase
{
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public :
	// デフォルトコンストラクタ
	Sphere(Vec3 position = Vec3(0.0f, 0.0f, 0.0f), float radius = 1.0f);


//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public :
	// デストラクタ
	virtual ~Sphere();


//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public :
	// メンバ変数
	Vector3D position_;
	float    radius_;
};





//======================================================================
//
// 非静的メンバ関数定義( inline )
//
//======================================================================

//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//
// [ デフォルトコンストラクタ ]
//
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

inline Sphere::Sphere(Vec3 position, float radius)
	: CollisionShapeBase(CollisionShapeBase::Type::SPHERE),
	  position_(position), 
	  radius_(radius)
{
}



//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//
// [ デストラクタ ]
//
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

inline Sphere::~Sphere() 
{
}



#endif