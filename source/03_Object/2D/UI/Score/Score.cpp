//================================================================================
//
//    スコアクラス
//    Author : Araki Kai                                作成日 : 2018/06/19
//
//================================================================================



//======================================================================
//
// インクルード文
//
//======================================================================

#include "Score.h"
#include <Numbers\NumbersFactory\NumbersFactory.h>



//======================================================================
//
// 非静的メンバ関数定義
//
//======================================================================

//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//
// [ 初期化関数 ]
//
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

void Score::Init(UpdateComponent*		 update_component,
	             DrawComponent*          draw_component,
				 GameScene* game_scene)
{
	// 各種代入
	game_scene_ = game_scene;

	// 数字群作成
	NumbersFactory numbers_factory;
	score_num_ = numbers_factory.Create();

	// 基底クラスの初期化
	Init_SuperClass(update_component, draw_component, nullptr);
}



//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//
// [ 終了処理関数 ]
//
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

void Score::Uninit()
{
	// 基底クラスの終了処理
	Uninit_SuperClass();
}



//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//
// [ Reset処理関数 ]
//
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

void Score::Reset()
{

}